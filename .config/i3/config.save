#          .--,-``-.                                                                       
#   ,---, /   /     '.                                                                     
#,`--.' |/ ../        ;                                          .--.,   ,--,              
#|   :  :\ ``\  .`-    '                    ,---.        ,---, ,--.'  \,--.'|              
#:   |  ' \___\/   \   :                   '   ,'\   ,-+-. /  ||  | /\/|  |,     ,----._,. 
#|   :  |      \   :   |           ,---.  /   /   | ,--.'|'   |:  : :  `--'_    /   /  ' / 
#'   '  ;      /  /   /           /     \.   ; ,. :|   |  ,"' |:  | |-,,' ,'|  |   :     | 
#|   |  |      \  \   \          /    / ''   | |: :|   | /  | ||  : :/|'  | |  |   | .\  . 
#'   :  ;  ___ /   :   |        .    ' / '   | .; :|   | |  | ||  |  .'|  | :  .   ; ';  | 
#|   |  ' /   /\   /   :        '   ; :__|   :    ||   | |  |/ '  : '  '  : |__'   .   . | 
#'   :  |/ ,,/  ',-    .        '   | '.'|\   \  / |   | |--'  |  | |  |  | '.'|`---`-'| | 
#;   |.' \ ''\        ;         |   :    : `----'  |   |/      |  : \  ;  :    ;.'__/\_: | 
#'---'    \   \     .'           \   \  /          '---'       |  |,'  |  ,   / |   :    : 
#          `--`-,,-'              `----'                       `--'     ---`-'   \   \  /  
#                                                                                 `--`-'   
#  https://github.com/rusitomorenito

#######################################################################
#                Mod key (Mod1=<Alt>, Mod4=<Super>)                   #
#######################################################################
set $mod Mod4


#######################################################################
#                                 Gaps                                #
#######################################################################
gaps bottom -3
gaps top 4
gaps left -1
gaps right -1
gaps inner 5

# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# Only enable outer gaps when there is exactly one container
smart_gaps inverse_outer

# Activate smart borders (always)
smart_borders on

# Activate smart borders (only when there are effectively no gaps)
#smart_borders no_gaps


#######################################################################
#                              Window borders                         #
#######################################################################


# Disable window titlebars
for_window [class="^.*"] border pixel 0 # Window borders


#######################################################################
#                               Keybindings                           #
#######################################################################

# Brightness
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%-

# Pause Media
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause

# Float window
bindsym $mod+Shift+space floating toggle
floating_modifier Mod4

# Start a terminal
bindsym $mod+Return exec alacritty

# Start Dolphin
bindsym $mod+e exec pcmanfm

# Kill focused window
bindsym $mod+x kill

# Start rofi
bindsym $mod+space exec "rofi -show drun"

# Launch browser
bindsym $mod+b exec "firefox"

# Launch Htop


# Move focus of the windows
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move windows around the space
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking bindsym $mod+w layout tabbed bindsym 
# $mod+e layout toggle split

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+q layout toggle split

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# Use pactl to adjust the volume with pulseaudio
# Comment this in case you want to use volumeicon
bindsym XF86AudioRaiseVolume exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ +5%"; exec amixer sset Master unmute
bindsym XF86AudioLowerVolume exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ -5%"
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
# bindsym F9 exec "pactl set-source-mute @DEFAULT_SOURCE@ toggle; notify-send 'MIC switched OFF' || notify-send 'MIC switched ON'"
bindsym F9 exec amixer set Capture toggle && amixer get Capture | grep "\[off\]" && notify-send "MIC switched OFF" || notify-send "MIC switched ON"


##############
# Workspaces #
##############

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: "
set $ws2 "2: "
set $ws3 "3: "
set $ws4 "4: "
set $ws5 "5: "

# switch to workspace
bindsym $mod+1 workspace $ws1 
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5

# Open applications in certain workspaces
assign [class="^firefox$"] → $ws1
assign [class="^Tor Browser$"] → $ws1
assign [class="^Alacritty"] → $ws2
assign [class="^code-oss$"] → $ws3
assign [class="^TelegramDesktop$"] → $ws3
assign [class="^whatsapp-web$"] → $ws3
assign [class="^Gedit$"] → $ws3
assign [class="^vlc$"] → $ws4
assign [class="^discord$"] → $ws4
assign [class="^Spotify$"] → $ws5 
assign [class="^csgo_linux64"] → $ws5
assign [class="^Steam"] → $ws5

# Open certain applications in floating mode
for_window [class="^Nitrogen$"] floating enable
for_window [class="^Seahorse$"] floating enable
# for_window [class="^Steam"] floating enable

# Focus window opened automatically
for_window [class="."] focus

### Put workspaces on specific monitors ###

# Monitor 1
workspace $ws1 output eDP1
workspace $ws2 output eDP1
workspace $ws3 output eDP1

# Monitor 2
workspace $ws4 output HDMI1
workspace $ws5 output HDMI1

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec i3-msg exit

# Enter resize mode
bindsym $mod+r mode "resize"

mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym ntilde resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}


#######################################################################
#                               Autostart                             #
#######################################################################

# Set monitor resolution
exec --no-startup-id xrandr --output HDMI1 --mode 1920x1080 --rate 60.00 --right-of eDP1 &

# Avoid the screen to turn off after X time
exec --no-startup-id xset s off &

# Restore the chosen wallpaper with nitrogen
exec --no-startup-id sleep2; nitrogen --restore &

# Set screen temperature
exec --no-startup-id redshift -P -O 3200 &

# Notifications
exec --no-startup-id dunst -conf /home/rusito/.config/dunst/catppuccinrc &

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# Systrays
exec --no-startup-id nm-applet &
# exec --no-startup-id volumeicon &
exec --no-startup-id udiskie  --no-appindicator &
exec--no-startup-id cbatticon -r 10 -i symbolic BAT0 &
exec_always --no-startup-id nm-applet 

# Start picom
exec --no-startup-id picom --config ~/.config/picom/picom.conf --experimental-backends & 

# Start any status bar
# exec_always --no-startup-id yabar &
bar {
	status_command i3status --config ~/.config/i3status/config
	strip_workspace_numbers yes
	workspace_min_width 40
	tray_output primary
	position top
	workspace_buttons yes
	height 27
 	font pango:Cousine nerd font 12
 	colors {
		background #302D41
		separator #D9E0EE
		focused_workspace #302D41 #302D41 #D9E0EE
		inactive_workspace #1E1E2E #1E1E2E #808080
 }
}

